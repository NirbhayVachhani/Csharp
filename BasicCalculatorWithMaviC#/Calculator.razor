@page "/Calculator"
@using System.Data;
@using Microsoft.AspNetCore.Components.Web;


<h1>Calculator</h1>

<style>
    h1 {
        text-align: center;
        color: #333;
        font-family: 'Arial', sans-serif;
    }

    .calculator-container {
        max-width: 400px;
        margin: auto;
        padding: 20px;
        border: 2px solid #ddd;
        border-radius: 15px;
        box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
        background-color: #fff;
    }

    .display {
        width: 100%;
        height: 80px;
        font-size: 36px;
        margin-bottom: 15px;
        text-align: right;
        padding: 10px;
        border: 2px solid #ddd;
        border-radius: 15px;
        background-color: #f8f8f8;
    }

    .btn {
        width: 60px;
        height: 60px;
        font-size: 28px;
        margin: 5px;
        border: none;
        border-radius: 10px;
        background-color: #f0f0f0;
        cursor: pointer;
        transition: background-color 0.3s;
        color: #333;
    }

        .btn:hover {
            background-color: #dcdcdc;
        }

    .btn-operation {
        background-color: #ffb74d;
        color: #333;
    }

    .btn-clear {
        background-color: #ef5350;
        color: #fff;
    }

    .btn-equal {
        background-color: #66bb6a;
        color: #fff;
    }

    .btn-grid {
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        justify-content: center;
        gap: 10px;
    }
</style>



<div class="calculator-container">
    <input class="display "type="text" @bind="display" readonly/>
    <div class="calculator-container">
        <div class="button-grid">
            <button class="btn" @onclick="()=>AppendToDisplay('0'.ToString())">0</button>
            <button class="btn" @onclick="()=>AppendToDisplay('1'.ToString())">1</button>
            <button class="btn" @onclick="()=>AppendToDisplay('2'.ToString())">2</button>
            <button class="btn" @onclick="()=>AppendToDisplay('3'.ToString())">3</button>
            <button class="btn" @onclick="()=>AppendToDisplay('4'.ToString())">4</button>
            <button class ="btn" @onclick="()=>AppendToDisplay('5'.ToString())">5</button>
            <button class="btn" @onclick="()=>AppendToDisplay('6'.ToString())">6</button>
            <button class="btn" @onclick="()=>AppendToDisplay('7'.ToString())">7</button>
        <button class="btn" @onclick="()=>AppendToDisplay('8'.ToString())">8</button>
        <button class="btn"@onclick="()=>AppendToDisplay('9'.ToString())">9</button>
            <button class="btn btn-operation" @onclick="()=>AppendToDisplay('+'.ToString())">+</button>
            <button class="btn btn-operation" @onclick="()=>AppendToDisplay('-'.ToString())">-</button>
            <button class="btn btn-operation" @onclick="()=>AppendToDisplay('*'.ToString())">*</button>
            <button class="btn btn-operation" @onclick="()=>AppendToDisplay('/'.ToString())">/</button>
            <button class="btn btn-equal" @onclick="()=>CalculateResult()">=</button>
            <button class="btn btn-clear" @onclick="ClearDisplay">C</button>
            <button class="btn btn-operation" @onclick="()=>AppendToDisplay('%'.ToString())">%</button>
            <button class="btn" @onclick="()=>AppendToDisplay('.'.ToString())">.</button>
        </div>
    </div>


</div>

@code {

    string display = "0";
    void AppendToDisplay(string value)
    {
        
        if (display == "0")
        {
            display = value;
        }
        else
        {
            display += value;
        }
    }

    void ClearDisplay()
    {
        display = "0";
    }

    void CalculateResult()
    {
        try
        {

            display = Evaluate(display).ToString();
        }
        catch (Exception e)
        {
            display = "Error";
        }

        double Evaluate(string expression)
        {
            return Convert.ToDouble(new DataTable().Compute(expression, null));
        }

    }
}